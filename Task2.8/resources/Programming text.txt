    If you don’t need a connection between the inner class object and the outer class object, then you can make the inner class static. To understand the meaning of static when applied to inner classes, you must remember that the object of an ordinary inner class implicitly keeps a reference to the object of the enclosing class that created it. This is not true, however, when you say an inner class is static.
    Static inner classes are different than non-static inner classes in another way, as well. Fields and methods in non-static inner classes can only be at the outer level of a class, so non-static inner classes cannot have static data, static fields, or static inner classes. However, static inner classes can have all of these:

    /*c08:Parcel10.java. Static inner classes*/
    public class Parcel10 {
        private static class PContents implements Contents {
            private int i = 11;
            public int value() { return i; }
        }
        protected static class PDestination implements Destination {
            private String label;
            private PDestination(String whereTo) {
                label = whereTo;
            }
            public String readLabel() { return label; }
            // Static inner classes can contain
            // other static elements:
            public static void f() {}
                static int x = 10;
                static class AnotherLevel {
                    public static void f() {}
                    static int x = 1;
                }
        }
        public static Destination dest(String s) {
            return new PDestination(s);
        }
        public static Contents cont() {
            return new PContents();
        }
        public static void main(String[] args) {
            Contents c = cont();
            Destination d = dest("Tanzania");
        }
    }

    No object of Parcel10 is necessary; instead you use the normal syntax for selecting a static member to call the methods that return references to Contents and Destination.
    Normally you can’t put any code inside an interface, but a static inner class can be part of an interface.

    /* c08 IInterface.java.Static inner classes inside interfaces.*/
    interface IInterface {
        static class Inner {
            int i, j, k;
            public Inner() {}
            void f() {}
        }
    }